/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode head1 =list1;
        ListNode head2 =list2;
        ListNode list3 = new ListNode(6,null);
        ListNode head3 = list3;
    //    ListNode listfin=head3;
 // list3=list3.next;
    while( head1!=null && head2!=null)
    {
        if(head1.val<=head2.val)
        {
            list3.next=head1;
             System.out.println("hi"+list3.val+"      next"+list3.next);
            head1=head1.next;
            list3=list3.next;

            
        }
        else{
            list3.next=head2;
             System.out.println("hi"+list3.val+"      next"+list3.next);
            head2=head2.next;
            list3=list3.next;
        }
    }
    while(head1!=null )
    {
      list3.next=head1;
             System.out.println("hi"+list3.val+"      next"+list3.next);
            head1=head1.next;
            list3=list3.next;
    }
    while(head2!=null)
    {
      list3.next=head2;
             System.out.println("hi"+list3.val+"      next"+list3.next);
            head2=head2.next;
            list3=list3.next;
    }

        return head3.next;

    }
}
